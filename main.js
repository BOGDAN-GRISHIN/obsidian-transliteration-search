/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

/**
 * Use as compareFn in sort
 */
const sorter = (toOrdered, order = "asc") => {
    return (a, b) => order === "asc"
        ? toOrdered(a) > toOrdered(b)
            ? 1
            : toOrdered(b) > toOrdered(a)
                ? -1
                : 0
        : toOrdered(a) < toOrdered(b)
            ? 1
            : toOrdered(b) < toOrdered(a)
                ? -1
                : 0;
};

const FOLDER = `<svg viewBox="0 0 100 100" class="folder" width="17" height="17"><path fill="currentColor" stroke="currentColor" d="M6.1,8c-3.3,0-6,2.7-6,6v73.8c-0.1,0.5-0.1,0.9,0.1,1.4c0.6,2.7,3,4.8,5.9,4.8h78c3,0,5.4-2.2,5.9-5.1 c0-0.1,0.1-0.2,0.1-0.4c0,0,0-0.1,0-0.1l0.1-0.3c0,0,0,0,0-0.1l9.9-53.6l0.1-0.2V34c0-3.3-2.7-6-6-6v-6c0-3.3-2.7-6-6-6H36.1 c0,0,0,0-0.1,0c-0.1,0-0.2-0.2-0.6-0.6c-0.5-0.6-1.1-1.5-1.7-2.5c-0.6-1-1.3-2.1-2.1-3C30.9,9,29.7,8,28.1,8L6.1,8z M6.1,12h22 c-0.1,0,0.1,0,0.6,0.6c0.5,0.6,1.1,1.5,1.7,2.5c0.6,1,1.3,2.1,2.1,3c0.8,0.9,1.9,1.9,3.6,1.9h52c1.1,0,2,0.9,2,2v6h-74 c-3.1,0-5.7,2.5-5.9,5.6h-0.1L10.1,34l-6,32.4V14C4.1,12.9,4.9,12,6.1,12z M16.1,32h78c1.1,0,2,0.9,2,2l-9.8,53.1l-0.1,0.1 c0,0.1,0,0.2-0.1,0.2c0,0.1,0,0.2-0.1,0.2c0,0,0,0.1,0,0.1c0,0,0,0,0,0.1c0,0.1,0,0.2-0.1,0.3c0,0.1,0,0.1,0,0.2 c0,0.1,0,0.2,0,0.2c-0.3,0.8-1,1.4-1.9,1.4h-78c-1.1,0-2-0.9-2-2L14,34.4l0.1-0.2V34C14.1,32.9,14.9,32,16.1,32L16.1,32z"></path></svg>`;
const ALIAS = `<svg viewBox="0 0 100 100" class="forward-arrow" width="16" height="16"><path fill="currentColor" stroke="currentColor" d="m9.9,89.09226c-0.03094,0 -0.05414,0 -0.08508,0c-1.06734,-0.04641 -1.91039,-0.92812 -1.89492,-1.99547c0.00774,-0.48726 1.14469,-48.13101 47.52,-49.44586l0,-13.89094c0,-0.7657 0.44086,-1.4618 1.12922,-1.78664c0.68062,-0.33258 1.5082,-0.23203 2.09601,0.2475l31.68,25.74c0.46406,0.37899 0.73476,0.9436 0.73476,1.53914c0,0.59555 -0.2707,1.16016 -0.72703,1.53914l-31.68,25.74c-0.59555,0.47953 -1.41539,0.57234 -2.10375,0.2475c-0.68836,-0.32485 -1.12922,-1.02094 -1.12922,-1.78664l0,-13.84453c-41.26289,0.75024 -43.49039,24.81961 -43.56773,25.85601c-0.06961,1.04414 -0.93586,1.84078 -1.97226,1.84078z"></path></svg>`;

const regEmoji = new RegExp(/[\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF]/, "g");
function excludeEmoji(text) {
    return text.replace(regEmoji, "");
}
function excludeSpace(text) {
    return text.replace(/ /g, "");
}
function smartIncludes(text, query) {
    return excludeSpace(text.toLowerCase()).includes(query.toLowerCase());
}
function smartStartsWith(text, query) {
    return excludeSpace(excludeEmoji(text.toLowerCase())).startsWith(query.toLowerCase());
}
function stampMatchType(item, queries) {
    if (queries.every((q) => smartStartsWith(item.file.name, q))) {
        return Object.assign(Object.assign({}, item), { matchType: "prefix-name" });
    }
    if (queries.every((q) => smartIncludes(item.file.name, q))) {
        return Object.assign(Object.assign({}, item), { matchType: "name" });
    }
    if (queries.every((q) => smartIncludes(item.file.path, q))) {
        return Object.assign(Object.assign({}, item), { matchType: "directory" });
    }
    if (queries.every((q) => {
        var _a;
        return ((_a = obsidian.parseFrontMatterAliases(item.cache.frontmatter)) !== null && _a !== void 0 ? _a : []).some((al) => smartIncludes(al, q));
    })) {
        return Object.assign(Object.assign({}, item), { matchType: "alias" });
    }
    return item;
}
function toPrefixIconHTML(item) {
    switch (item.item.matchType) {
        case "alias":
            return `<span class="another-quick-switcher__item__icon">${ALIAS}</span>`;
        case "directory":
            return `<span class="another-quick-switcher__item__icon">${FOLDER}</span>`;
    }
    return "";
}
class SmartSearchModal extends obsidian.FuzzySuggestModal {
    constructor(app) {
        super(app);
        this.scope.register(["Ctrl"], "Enter", 
        // XXX: This is unsafe code..!! ðŸ˜‚
        this.scope.keys.find((x) => !x.modifiers && x.key === "Enter").func);
    }
    getSuggestions(query) {
        const recentMode = query.startsWith("/");
        const qs = (recentMode ? query.slice(1) : query)
            .split(" ")
            .filter((x) => x);
        let items = this.getItems()
            .map((x) => stampMatchType(x, qs))
            .filter((x) => x.matchType)
            .map((x) => ({
            item: x,
            match: {
                score: x.file.stat.mtime,
                matches: [],
            },
        }))
            .sort(sorter((x) => x.item.file.stat.mtime, "desc"));
        if (!recentMode) {
            items = items
                .sort(sorter((x) => (x.item.matchType === "directory" ? 1 : 0)))
                .sort(sorter((x) => x.item.matchType === "prefix-name"
                ? 1000 - x.item.file.name.length
                : 0, "desc"));
        }
        return items.slice(0, 10);
    }
    renderSuggestion(item, el) {
        const suggestionItemHtml = `
<div class="another-quick-switcher__item">
  <div class="another-quick-switcher__item__file">${item.item.file.basename}</div>
  <div class="another-quick-switcher__item__directory">${FOLDER} ${item.item.file.parent.name}</div>
</div>
`.trim();
        el.insertAdjacentHTML("beforeend", `${toPrefixIconHTML(item)}${suggestionItemHtml}`);
    }
    getItemText(item) {
        return `${item.file.basename}`;
    }
    getItems() {
        return this.app.vault.getMarkdownFiles().map((x) => ({
            file: x,
            cache: this.app.metadataCache.getFileCache(x),
        }));
    }
    onChooseItem(item, evt) {
        // For Ctrl + Click, not Ctrl + Enter (TODO...)
        this.openFile(item.file, evt.ctrlKey);
    }
    openFile(file, newLeaf) {
        const leaf = this.app.workspace.getLeaf(newLeaf);
        leaf.openFile(file).then(() => {
            this.app.workspace.setActiveLeaf(leaf, true, newLeaf);
        });
    }
}

class SmartSearch extends obsidian.Plugin {
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            console.log("loading plugin");
            this.addCommand({
                id: "search",
                name: "Search",
                hotkeys: [{ modifiers: ["Ctrl"], key: "p" }],
                checkCallback: (checking) => {
                    if (!checking) {
                        this.showList();
                    }
                    return true;
                },
            });
        });
    }
    showList() {
        const modal = new SmartSearchModal(this.app);
        modal.open();
    }
}

module.exports = SmartSearch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
